version: "3.3"

services:
  traefik:
    container_name: traefik
    image: "traefik:latest"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - traefik_ssl_certs:/ssl_certs
    networks:
       - reverse_proxy_nw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # wildcard certs
      - "traefik.http.routers.wildcard-certs.tls.certresolver=godaddy"
      - "traefik.http.routers.wildcard-certs.tls.domains[0].main=abhishek0010.xyz"
      - "traefik.http.routers.wildcard-certs.tls.domains[0].sans=*.abhishek0010.xyz"
 
      # for dashboard
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.abhishek0010.xyz`)"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.services.traefik-secure.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.docker.network=reverse_proxy_nw"
volumes:
  traefik_ssl_certs:
    name: traefik_ssl_certs
networks:
  reverse_proxy_nw:
    external: true


